[tool.poetry]
name = "policy-classifier"
version = "0.1.0"
description = ""
authors = ["Atreya Shankar <35427332+atreyasha@users.noreply.github.com>"]
license = "MIT"

[tool.poetry.dependencies]
python = "~3.8"
pandas = "^1.3.3"
scikit-learn = "^1.0"
ipdb = "^0.13.9"
dill = "^0.3.4"

[tool.poetry.group.dev.dependencies]
mypy = "^0.910"
pytest = "^7.1.2"
pytest-cov = "^4.1.0"
black = "^23.7.0"
flake8 = "^5.0.4"
isort = "^5.12.0"
shellcheck-py = "^0.9.0.5"
shfmt-py = "^3.7.0.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
target-version = ["py38"]
quiet = true
extend-exclude = """
/(
  scripts |
  runs |
  data |
  coverage |
  .venv
)/
"""

[tool.isort]
profile = "black"
skip_glob = ["data/*", "runs/*", "scripts/*",
             "coverage/*", ".venv/*"]
known_first_party = ["parser"]

[tool.coverage.run]
branch = true
source = ["src"]
omit = ["src/parser.py", "src/utils.py"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "if __name__ == \"__main__\":",
  "raise AssertionError",
  "raise NotImplementedError",
  "@abstractmethod",
  "pass"
]
skip_empty = true

[tool.coverage.html]
directory = "coverage"

[tool.pytest.ini_options]
addopts = "-p no:warnings --basetemp=tests/artifacts --cov=src"
pythonpath = ["src"]
testpaths = ["tests"]
markers = [
    "integration: slower integration tests",
]

[tool.mypy]
strict = true
files = "src"

[[tool.mypy.overrides]]
module = [
    "pandas",
    "numpy",
    "ipdb",
    "sklearn.*",
    "dill"
]
ignore_missing_imports = true
